# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Gender {
  id: String!
  name: String!
}

type User {
  id: String!
  type: Int!
  name: String
  email: String
  status: Int!
  birthDate: Int
  idGender: String
  phoneNumber: String
  registerDate: Int
  profileImg: String
  idLanguage: String
  idCountry: String
  idReferral: String
  loginDisable: Int
  country: Country
  gender: Gender
}

type Country {
  id: String!
  code: String!
  name: String!
}

type UserPaginated {
  items: [User!]
  total: Int
}

type Query {
  """Find all countries"""
  countries: [Country!]!

  """Find one country"""
  country(id: String!): Country
  getUserByCountryId(id: String!): [User!]!

  """Find all users"""
  users(offset: Int = 0, limit: Int = 20, orderBy: UserOrderByArgs!): UserPaginated!
  login(email: String!, password: String!): User!

  """Get all countries of given classified_account"""
  getClassAccCountries(id: String!): [Country!]!
}

input UserOrderByArgs {
  direction: Direction = DESC
  field: UserOrderByField = registerDate
}

enum Direction {
  ASC
  DESC
}

enum UserOrderByField {
  name
  registerDate
}

type Mutation {
  """Find all users"""
  mutation(offset: Int = 0, limit: Int = 20, orderBy: UserOrderByArgs!): UserPaginated!
}
